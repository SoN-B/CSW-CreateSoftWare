#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;
int solution(vector<vector<int>> board)
{
    int answer = 1234;
    int count = 0;
    vector<vector<int>> ans;
    for(int i = 0; i < board.size();i++)
    {
        for(int j = 0; j <board[i].size();j++)
        {
            if(board[i][j] == 1)
            {
                copy(board[i][j],board[i][j+1],ans);
            }
        }
    }
    
    for(int i = 0; i < board.size();i++)
    {
        for(int j = 0; j <board[i].size();j++)
        {
            cout << ans[i][j];
        }
    }
    return answer;
}
--------------------------------------------------------------------------------------------

#include <iostream>
#include <vector>
#include <algorithm>
int answer = 0;
using namespace std;
void dns(vector<vector<int>>&board,int x=0,int y=0,int 가로=0,int 세로=0)
{
    if(가로 == board[0].size() || 세로 == board.size())
    {
        return ;
    }
    if(x == y)
    {
        answer = x;
    }
    dns(board,x+1,y,가로+1,세로);
    dns(board,x,y+1,가로,세로+1);
    
}
int solution(vector<vector<int>> board)
{
    dns(board);
    return answer * answer;
}
---------------------------------------------------------------------------------------------------
